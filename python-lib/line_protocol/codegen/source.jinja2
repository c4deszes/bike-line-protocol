#include "line_application.h"
#include "line_api.h"

{% for request in node.publishes %}
LINE_Frame_{{request.name}}_t LINE_Request_{{request.name}}_data;
bool LINE_Request_{{request.name}}_flag_internal;
{% endfor %}

{% for request in node.subscribes %}
LINE_Frame_{{request.name}}_t LINE_Request_{{request.name}}_data;
bool LINE_Request_{{request.name}}_flag_internal;
{% endfor %}

bool LINE_API_RespondsTo(uint16_t request) {
    {% for request in node.publishes %}
    if (request == LINE_REQUEST_{{request.name}}_ID) {
        return true;
    }
    {% endfor %}
    return false;
}

bool LINE_API_PrepareResponse(uint16_t request, uint8_t* size, uint8_t* payload) {
    {% for request in node.publishes %}
    if (request == LINE_REQUEST_{{request.name}}_ID) {
        *size = LINE_REQUEST_{{request.name}}_SIZE;
        for (int i = 0; i < LINE_REQUEST_{{request.name}}_SIZE; i++) {
            payload[i] = LINE_Request_{{request.name}}_data.data[i];
        }
        LINE_Request_{{request.name}}_flag_internal = true;
        return true;
    }
    {% endfor %}
    return false;
}

bool LINE_API_ListensTo(uint16_t request) {
    {% for request in node.subscribes %}
    if (request == LINE_REQUEST_{{request.name}}_ID) {
        return true;
    }
    {% endfor %}
    return false;
}

void LINE_API_OnRequest(uint16_t request, uint8_t size, uint8_t* payload) {
    {% for request in node.subscribes %}
    if (request == LINE_REQUEST_{{request.name}}_ID) {
        // TODO: reject request if size doesn't equal the request size
        for (int i = 0; i < LINE_REQUEST_{{request.name}}_SIZE; i++) {
            LINE_Request_{{request.name}}_data.data[i] = payload[i];
        }
        LINE_Request_{{request.name}}_flag_internal = true;
    }
    {% endfor %}
}

{% for request in node.subscribes %}
bool LINE_Request_{{request.name}}_flag(void) {
    if (LINE_Request_{{request.name}}_flag_internal) {
        LINE_Request_{{request.name}}_flag_internal = false;
        return true;
    }
    return false;
}
{% endfor %}

{% for request in node.publishes %}
bool LINE_Request_{{request.name}}_flag(void) {
    if (LINE_Request_{{request.name}}_flag_internal) {
        LINE_Request_{{request.name}}_flag_internal = false;
        return true;
    }
    return false;
}
{% endfor %}
